asdasdf
clear
cls
q()
setwd("~/GitHub/Machine-Learning-A-Z/Machine Learning A-Zâ„¢ - AI, Python & R + ChatGPT Bonus [2023]/1. Data Preprocessing")
# -------------------- Taking Care of Missing Data --------------------
data$Age = as.integer(ifelse(is.na(data$Age),
ave(data$Age, FUN = function(x) mean(x, na.rm = TRUE)),
data$Age))
# -------------------- Data Preprocessing in R --------------------
# -------------------- Importing the Libraries --------------------
data = read.csv('Dataset/Data.csv')
# -------------------- Taking Care of Missing Data --------------------
data$Age = as.integer(ifelse(is.na(data$Age),
ave(data$Age, FUN = function(x) mean(x, na.rm = TRUE)),
data$Age))
data$Salary = (ifelse(is.na(data$Salary),
ave(data$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
data$Salary))
# -------------------- Encoding Categorical Data --------------------
data$Country = factor(data$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
data$Purchased = factor(data$Purchased,
levels = c('Yes', 'No'),
labels = c(1, 0))
View(data)
# -------------------- Data Preprocessing in R --------------------
# -------------------- Importing the Libraries --------------------
data = read.csv('Dataset/Data.csv')
# -------------------- Taking Care of Missing Data --------------------
data$Age = (ifelse(is.na(data$Age),
ave(data$Age, FUN = function(x) mean(x, na.rm = TRUE)),
data$Age))
data$Salary = (ifelse(is.na(data$Salary),
ave(data$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
data$Salary))
# -------------------- Encoding Categorical Data --------------------
data$Country = factor(data$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
data$Purchased = factor(data$Purchased,
levels = c('Yes', 'No'),
labels = c(1, 0))
# -------------------- Data Preprocessing in R --------------------
# -------------------- Importing the Libraries --------------------
data = read.csv('Dataset/Data.csv')
# -------------------- Taking Care of Missing Data --------------------
data$Age = as.integer(ifelse(is.na(data$Age),
ave(data$Age, FUN = function(x) mean(x, na.rm = TRUE)),
data$Age))
data$Salary = (ifelse(is.na(data$Salary),
ave(data$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
data$Salary))
# -------------------- Encoding Categorical Data --------------------
data$Country = factor(data$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
data$Purchased = factor(data$Purchased,
levels = c('Yes', 'No'),
labels = c(1, 0))
# -------------------- Data Preprocessing in R --------------------
# -------------------- Importing the Libraries --------------------
data = read.csv('Dataset/Data.csv')
# -------------------- Taking Care of Missing Data --------------------
data$Age = as.integer(ifelse(is.na(data$Age),
ave(data$Age, FUN = function(x) mean(x, na.rm = TRUE)),
data$Age))
data$Salary = (ifelse(is.na(data$Salary),
ave(data$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
data$Salary))
# -------------------- Encoding Categorical Data --------------------
data$Country = factor(data$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
data$Purchased = factor(data$Purchased,
levels = c('Yes', 'No'),
labels = c(1, 0))
# -------------------- Data Preprocessing in R --------------------
# -------------------- Importing the Libraries --------------------
data = read.csv('Dataset/Data.csv')
# -------------------- Taking Care of Missing Data --------------------
data$Age = as.integer(ifelse(is.na(data$Age),
ave(data$Age, FUN = function(x) mean(x, na.rm = TRUE)),
data$Age))
data$Salary = (ifelse(is.na(data$Salary),
ave(data$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
data$Salary))
# -------------------- Encoding Categorical Data --------------------
data$Country = factor(data$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
data$Purchased = factor(data$Purchased,
levels = c('Yes', 'No'),
labels = c(1, 0))
# -------------------- Splitting The Dataset Into Training and Test Set --------------------
instal
# -------------------- Splitting The Dataset Into Training and Test Set --------------------
install.packages('caTools')
library(caTools)
detach("package:caTools", unload = TRUE)
library(caTools)
library(caTools)
detach("package:caTools", unload = TRUE)
library(caTools)
detach("package:caTools", unload = TRUE)
library(caTools)
# -------------------- Importing the Libraries --------------------
data = read.csv('Dataset/Data.csv')
data$Age = as.integer(ifelse(is.na(data$Age),
ave(data$Age, FUN = function(x) mean(x, na.rm = TRUE)),
data$Age))
data$Salary = (ifelse(is.na(data$Salary),
ave(data$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
data$Salary))
data$Country = factor(data$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
data$Purchased = factor(data$Purchased,
levels = c('Yes', 'No'),
labels = c(1, 0))
library(caTools)
set.seed(123)
split = sample.split(data$Purchased, SplitRatio = 0.8)
split
training_set = subset(data, split = TRUE)
test_set = subset(data, split = FALSE)
View(training_set)
View(training_set)
View(test_set)
training_set = subset(data, split == TRUE)
test_set = subset(data, split == FALSE)
View(data)
View(training_set)
View(test_set)
# -------------------- Data Preprocessing in R --------------------
# -------------------- Importing the Libraries --------------------
data = read.csv('Dataset/Data.csv')
# -------------------- Taking Care of Missing Data --------------------
data$Age = as.integer(ifelse(is.na(data$Age),
ave(data$Age, FUN = function(x) mean(x, na.rm = TRUE)),
data$Age))
data$Salary = (ifelse(is.na(data$Salary),
ave(data$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
data$Salary))
# -------------------- Encoding Categorical Data --------------------
data$Country = factor(data$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
data$Purchased = factor(data$Purchased,
levels = c('Yes', 'No'),
labels = c(1, 0))
# -------------------- Splitting The Dataset Into Training and Test Set --------------------
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(data$Purchased, SplitRatio = 0.8)
training_set = subset(data, split == TRUE)
test_set = subset(data, split == FALSE)
View(data)
View(training_set)
View(test_set)
